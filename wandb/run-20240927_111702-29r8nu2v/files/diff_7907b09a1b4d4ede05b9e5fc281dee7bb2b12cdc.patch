diff --git a/dataset/first49/README.dataset.txt b/dataset/first49/README.dataset.txt
deleted file mode 100644
index 4f0997d..0000000
--- a/dataset/first49/README.dataset.txt
+++ /dev/null
@@ -1,6 +0,0 @@
-# Volleyball PW > 2024-09-26 8:16am
-https://universe.roboflow.com/volleyball-vrdkb/volleyball-pw
-
-Provided by a Roboflow user
-License: MIT
-
diff --git a/dataset/first49/README.roboflow.txt b/dataset/first49/README.roboflow.txt
deleted file mode 100644
index 4e9c35a..0000000
--- a/dataset/first49/README.roboflow.txt
+++ /dev/null
@@ -1,29 +0,0 @@
-
-Volleyball PW - v8 2024-09-26 8:16am
-==============================
-
-This dataset was exported via roboflow.com on September 26, 2024 at 8:16 AM GMT
-
-Roboflow is an end-to-end computer vision platform that helps you
-* collaborate with your team on computer vision projects
-* collect & organize images
-* understand and search unstructured image data
-* annotate, and create datasets
-* export, train, and deploy computer vision models
-* use active learning to improve your dataset over time
-
-For state of the art Computer Vision training notebooks you can use with this dataset,
-visit https://github.com/roboflow/notebooks
-
-To find over 100k other datasets and pre-trained models, visit https://universe.roboflow.com
-
-The dataset includes 49 images.
-Player-k9cS are annotated in YOLOv8 format.
-
-The following pre-processing was applied to each image:
-* Auto-orientation of pixel data (with EXIF-orientation stripping)
-* Resize to 640x640 (Stretch)
-
-No image augmentation techniques were applied.
-
-
diff --git a/train_yolov8.py b/train_yolov8.py
index a120b09..3199d81 100644
--- a/train_yolov8.py
+++ b/train_yolov8.py
@@ -1,34 +1,23 @@
 import argparse
 from ultralytics import YOLO
-from wandb.integration.keras import WandbCallback
 
-
-def train_and_evaluate(data_yaml, model_name='yolov8n.pt', epochs=50, imgsz=640, project_name='YOLOv8-Training'):
+def train_and_evaluate(data_yaml, model_name='yolov8n.pt', epochs=50, imgsz=640, project_name='volleyball_tracker_training'):
     """
     Trains YOLOv8 on a custom dataset and evaluates on the test set.
-
-    Args:
-        data_yaml (str): Path to the data YAML file.
-        model_name (str): Pre-trained YOLOv8 model to start from.
-        epochs (int): Number of training epochs.
-        imgsz (int): Image size for training.
-        project_name (str): Name of the wandb project.
     """
     # Load the model
     model = YOLO(model_name)
 
-    # Train the model with wandb integration
+    # Train the model (wandb integration is automatic)
     model.train(
         data=data_yaml,
         epochs=epochs,
         imgsz=imgsz,
-        val=True,  # Perform validation
-        project='runs/detect',
+        val=True,
+        project=project_name,
         name='train',
         exist_ok=True,
-        verbose=True,
-        # Enable wandb logging
-        callbacks=[WandbCallback(project=project_name)]
+        verbose=True
     )
 
     # Evaluate the model on the test set
@@ -48,15 +37,14 @@ def train_and_evaluate(data_yaml, model_name='yolov8n.pt', epochs=50, imgsz=640,
     for k, v in metrics.items():
         print(f"{k}: {v}")
 
-
 if __name__ == "__main__":
     parser = argparse.ArgumentParser(description="Train and evaluate YOLOv8 on a custom dataset.")
     parser.add_argument('--data', type=str, required=True, help='Path to data.yaml')
     parser.add_argument('--model', type=str, default='yolov8n.pt', help='Pre-trained model to use')
     parser.add_argument('--epochs', type=int, default=50, help='Number of epochs')
     parser.add_argument('--imgsz', type=int, default=640, help='Image size')
-    parser.add_argument('--project', type=str, default='YOLOv8-Training', help='wandb project name')
+    parser.add_argument('--project', type=str, default='volleyball_tracker_training', help='Project name')
 
     args = parser.parse_args()
 
-    train_and_evaluate(args.data, args.model, args.epochs, args.imgsz, args.project)
+    train_and_evaluate(args.data, args.model, args.epochs, args.imgsz, args.project)
\ No newline at end of file
diff --git a/volleyball_tracker_training/train/args.yaml b/volleyball_tracker_training/train/args.yaml
new file mode 100644
index 0000000..445dc07
--- /dev/null
+++ b/volleyball_tracker_training/train/args.yaml
@@ -0,0 +1,106 @@
+task: detect
+mode: train
+model: yolov8n.pt
+data: /Users/alessandrofolloni/PycharmProjects/volleyball_tracker/dataset/first49/data.yaml
+epochs: 50
+time: null
+patience: 100
+batch: 16
+imgsz: 640
+save: true
+save_period: -1
+cache: false
+device: null
+workers: 8
+project: volleyball_tracker_training
+name: train
+exist_ok: true
+pretrained: true
+optimizer: auto
+verbose: true
+seed: 0
+deterministic: true
+single_cls: false
+rect: false
+cos_lr: false
+close_mosaic: 10
+resume: false
+amp: true
+fraction: 1.0
+profile: false
+freeze: null
+multi_scale: false
+overlap_mask: true
+mask_ratio: 4
+dropout: 0.0
+val: true
+split: val
+save_json: false
+save_hybrid: false
+conf: null
+iou: 0.7
+max_det: 300
+half: false
+dnn: false
+plots: true
+source: null
+vid_stride: 1
+stream_buffer: false
+visualize: false
+augment: false
+agnostic_nms: false
+classes: null
+retina_masks: false
+embed: null
+show: false
+save_frames: false
+save_txt: false
+save_conf: false
+save_crop: false
+show_labels: true
+show_conf: true
+show_boxes: true
+line_width: null
+format: torchscript
+keras: false
+optimize: false
+int8: false
+dynamic: false
+simplify: true
+opset: null
+workspace: 4
+nms: false
+lr0: 0.01
+lrf: 0.01
+momentum: 0.937
+weight_decay: 0.0005
+warmup_epochs: 3.0
+warmup_momentum: 0.8
+warmup_bias_lr: 0.1
+box: 7.5
+cls: 0.5
+dfl: 1.5
+pose: 12.0
+kobj: 1.0
+label_smoothing: 0.0
+nbs: 64
+hsv_h: 0.015
+hsv_s: 0.7
+hsv_v: 0.4
+degrees: 0.0
+translate: 0.1
+scale: 0.5
+shear: 0.0
+perspective: 0.0
+flipud: 0.0
+fliplr: 0.5
+bgr: 0.0
+mosaic: 1.0
+mixup: 0.0
+copy_paste: 0.0
+auto_augment: randaugment
+erasing: 0.4
+crop_fraction: 1.0
+cfg: null
+tracker: botsort.yaml
+save_dir: volleyball_tracker_training/train
diff --git a/yolov8n.pt b/yolov8n.pt
new file mode 100644
index 0000000..0db4ca4
Binary files /dev/null and b/yolov8n.pt differ
